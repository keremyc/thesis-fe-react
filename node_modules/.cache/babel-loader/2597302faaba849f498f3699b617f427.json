{"ast":null,"code":"var _jsxFileName = \"/home/kerem/thesis-fe-react/src/components/MainContent/WebSites/WebSiteCards.js\",\n    _s = $RefreshSig$();\n\nimport SortPanel from \"./SortPanel\";\nimport WebsiteCard from \"./WebsiteCard\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WebSiteCards(props) {\n  _s();\n\n  const [webSites, setWebSites] = useState();\n  useEffect(() => {\n    if (!props.websites) {\n      fetch(\"http://localhost:8080/api/webpages\").then(response => {\n        if (!response.ok) {\n          throw new Error(\"Error: Failed To Fetch\");\n        }\n\n        return response.json();\n      }).then(data => setWebSites(data)).catch(err => alert(err.message));\n    } else {\n      setWebSites(props.websites);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-7 mx-3\",\n    children: [/*#__PURE__*/_jsxDEV(SortPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"gy-0 p-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"d-inline h4 m-2\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), webSites && webSites.map(site => /*#__PURE__*/_jsxDEV(WebsiteCard, {\n      onSelect: props.onSelectCard,\n      webSiteData: site\n    }, site.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebSiteCards, \"gxaHltSZABppHplIUxZiHv6cJ0c=\");\n\n_c = WebSiteCards;\nexport default WebSiteCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSiteCards\");","map":{"version":3,"sources":["/home/kerem/thesis-fe-react/src/components/MainContent/WebSites/WebSiteCards.js"],"names":["SortPanel","WebsiteCard","useEffect","useState","WebSiteCards","props","webSites","setWebSites","websites","fetch","then","response","ok","Error","json","data","catch","err","alert","message","title","map","site","onSelectCard","id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,KAAK,CAACG,QAAX,EAAqB;AACnBC,MAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,eAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,OANH,EAOGJ,IAPH,CAOSK,IAAD,IAAUR,WAAW,CAACQ,IAAD,CAP7B,EAQGC,KARH,CAQUC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CARvB;AASD,KAVD,MAUO;AACLZ,MAAAA,WAAW,CAACF,KAAK,CAACG,QAAP,CAAX;AACD;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA,gBAAgCH,KAAK,CAACe;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGd,QAAQ,IACPA,QAAQ,CAACe,GAAT,CAAcC,IAAD,iBACX,QAAC,WAAD;AAEE,MAAA,QAAQ,EAAEjB,KAAK,CAACkB,YAFlB;AAGE,MAAA,WAAW,EAAED;AAHf,OACOA,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,YADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQpB,Y;;KAAAA,Y;AAoCT,eAAeA,YAAf","sourcesContent":["import SortPanel from \"./SortPanel\";\nimport WebsiteCard from \"./WebsiteCard\";\n\nimport { useEffect, useState } from \"react\";\n\nfunction WebSiteCards(props) {\n  const [webSites, setWebSites] = useState();\n\n  useEffect(() => {\n    if (!props.websites) {\n      fetch(\"http://localhost:8080/api/webpages\")\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Error: Failed To Fetch\");\n          }\n          return response.json();\n        })\n        .then((data) => setWebSites(data))\n        .catch((err) => alert(err.message));\n    } else {\n      setWebSites(props.websites);\n    }\n  }, []);\n\n  return (\n    <div className=\"col-7 mx-3\">\n      <SortPanel />\n      <hr className=\"gy-0 p-0\" />\n      <p className=\"d-inline h4 m-2\">{props.title}</p>\n      {webSites &&\n        webSites.map((site) => (\n          <WebsiteCard\n            key={site.id}\n            onSelect={props.onSelectCard}\n            webSiteData={site}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default WebSiteCards;\n"]},"metadata":{},"sourceType":"module"}