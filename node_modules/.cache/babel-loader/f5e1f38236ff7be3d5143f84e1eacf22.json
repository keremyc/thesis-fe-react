{"ast":null,"code":"var _jsxFileName = \"/home/kerem/thesis-fe-react/src/store/auth-context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  token: \"\",\n  isAuthenticated: false,\n  username: \"\",\n  login: () => {},\n  logout: () => {}\n});\nexport function AuthContextProvider(props) {\n  _s();\n\n  const [authState, setAuthState] = useState({\n    token: \"\",\n    username: \"\",\n    isAuthenticated: false\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n\n    if (storedToken && username) {\n      setAuthState({\n        token: storedToken,\n        isAuthenticated: true,\n        username: username\n      });\n    }\n  }, []);\n\n  function loginHandler(authToken, username) {\n    setAuthState({\n      token: authToken,\n      isAuthenticated: true,\n      username: username\n    });\n    localStorage.setItem(\"token\", authToken);\n    localStorage.setItem(\"username\", username);\n  }\n\n  function logoutHandler() {\n    setAuthState({\n      token: \"\",\n      isAuthenticated: false,\n      username: \"\"\n    });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    history.push(\"/home\");\n  }\n\n  const authContext = {\n    token: authState.token,\n    username: authState.username,\n    isAuthenticated: authState.isAuthenticated,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextProvider, \"R3C3PXFFPdHMJQWrv/Ga5J6GRtw=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/kerem/thesis-fe-react/src/store/auth-context/AuthContext.js"],"names":["createContext","useEffect","useState","useHistory","AuthContext","token","isAuthenticated","username","login","logout","AuthContextProvider","props","authState","setAuthState","history","storedToken","localStorage","getItem","loginHandler","authToken","setItem","logoutHandler","removeItem","push","authContext","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;AAChCK,EAAAA,KAAK,EAAE,EADyB;AAEhCC,EAAAA,eAAe,EAAE,KAFe;AAGhCC,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,KAAK,EAAE,MAAM,CAAE,CAJiB;AAKhCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AALgB,CAAD,CAAjC;AAQA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AACzCG,IAAAA,KAAK,EAAE,EADkC;AAEzCE,IAAAA,QAAQ,EAAE,EAF+B;AAGzCD,IAAAA,eAAe,EAAE;AAHwB,GAAD,CAA1C;AAKA,QAAMQ,OAAO,GAAGX,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMV,QAAQ,GAAGS,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;;AACA,QAAIF,WAAW,IAAIR,QAAnB,EAA6B;AAC3BM,MAAAA,YAAY,CAAC;AAAER,QAAAA,KAAK,EAAEU,WAAT;AAAsBT,QAAAA,eAAe,EAAE,IAAvC;AAA6CC,QAAAA,QAAQ,EAAEA;AAAvD,OAAD,CAAZ;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,WAASW,YAAT,CAAsBC,SAAtB,EAAiCZ,QAAjC,EAA2C;AACzCM,IAAAA,YAAY,CAAC;AACXR,MAAAA,KAAK,EAAEc,SADI;AAEXb,MAAAA,eAAe,EAAE,IAFN;AAGXC,MAAAA,QAAQ,EAAEA;AAHC,KAAD,CAAZ;AAKAS,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BD,SAA9B;AACAH,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCb,QAAjC;AACD;;AAED,WAASc,aAAT,GAAyB;AACvBR,IAAAA,YAAY,CAAC;AAAER,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,eAAe,EAAE,KAA9B;AAAqCC,MAAAA,QAAQ,EAAE;AAA/C,KAAD,CAAZ;AACAS,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACAN,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,OAAb;AACD;;AAED,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,KAAK,EAAEO,SAAS,CAACP,KADC;AAElBE,IAAAA,QAAQ,EAAEK,SAAS,CAACL,QAFF;AAGlBD,IAAAA,eAAe,EAAEM,SAAS,CAACN,eAHT;AAIlBE,IAAAA,KAAK,EAAEU,YAJW;AAKlBT,IAAAA,MAAM,EAAEY;AALU,GAApB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,WAA7B;AAAA,cACGb,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA9Cef,mB;UAMEP,U;;;KANFO,mB;AAgDhB,eAAeN,WAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext({\n  token: \"\",\n  isAuthenticated: false,\n  username: \"\",\n  login: () => {},\n  logout: () => {},\n});\n\nexport function AuthContextProvider(props) {\n  const [authState, setAuthState] = useState({\n    token: \"\",\n    username: \"\",\n    isAuthenticated: false,\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (storedToken && username) {\n      setAuthState({ token: storedToken, isAuthenticated: true, username: username });\n    }\n  }, []);\n\n  function loginHandler(authToken, username) {\n    setAuthState({\n      token: authToken,\n      isAuthenticated: true,\n      username: username,\n    });\n    localStorage.setItem(\"token\", authToken);\n    localStorage.setItem(\"username\", username);\n  }\n\n  function logoutHandler() {\n    setAuthState({ token: \"\", isAuthenticated: false, username: \"\" });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    history.push(\"/home\");\n  }\n\n  const authContext = {\n    token: authState.token,\n    username: authState.username,\n    isAuthenticated: authState.isAuthenticated,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}