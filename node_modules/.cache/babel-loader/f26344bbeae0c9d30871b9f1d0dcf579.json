{"ast":null,"code":"var _jsxFileName = \"/home/kerem/thesis-fe-react/src/components/MainContent/WebSites/WebSiteCards.js\",\n    _s = $RefreshSig$();\n\nimport SortPanel from \"./SortPanel\";\nimport WebsiteCard from \"./WebsiteCard\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sort(arr, by) {\n  for (let i = 0; i < arr.length; i++) {\n    let indexOfMax = i;\n\n    for (let j = i + 1; j < arr.length; j++) {\n      if (by === \"likes\") {\n        if (arr[j].numberOfLikes > arr[indexOfMax].numberOfLikes) {\n          indexOfMax = j;\n        }\n      } else if (by === \"dislikes\") {\n        if (arr[j].numberOfDislikes > arr[indexOfMax].numberOfDislikes) {\n          indexOfMax = j;\n        }\n      }\n    }\n\n    const maxValue = arr[indexOfMax];\n    arr[indexOfMax] = arr[i];\n    arr[i] = maxValue;\n  }\n}\n\nfunction WebSiteCards(props) {\n  _s();\n\n  const [webSites, setWebSites] = useState();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortByParam = searchParams.get(\"sortBy\");\n  useEffect(() => {\n    if (!props.websites) {\n      fetch(\"http://localhost:8080/api/webpages\").then(response => {\n        if (!response.ok) {\n          throw new Error(\"Error: Failed To Fetch\");\n        }\n\n        return response.json();\n      }).then(data => {\n        setWebSites(data);\n      }).catch(err => alert(err.message));\n    } else {\n      setWebSites(props.websites);\n    }\n  }, [props.websites]);\n\n  if (webSites && sortByParam) {\n    if (sortByParam.toLowerCase() === \"liked\") {\n      sort(webSites, \"likes\");\n    } else if (sortByParam.toLowerCase() === \"disliked\") {\n      sort(webSites, \"dislikes\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-7 mx-3\",\n    children: [/*#__PURE__*/_jsxDEV(SortPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"gy-0 p-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), webSites && [].concat(webSites).sort((a, b) => {\n      if (sortByParam === \"Likes\") {\n        return a.numberOfLikes > b.numberOfLikes ? -1 : 1;\n      } else {\n        return a.numberOfDislikes > b.numberOfDislikes ? -1 : 1;\n      }\n    }).map(site => /*#__PURE__*/_jsxDEV(WebsiteCard, {\n      onSelect: props.onSelectCard,\n      webSiteData: site\n    }, site.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebSiteCards, \"YK8MtOb8faVKGN0rPQaHZ09yjvs=\", false, function () {\n  return [useLocation];\n});\n\n_c = WebSiteCards;\nexport default WebSiteCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSiteCards\");","map":{"version":3,"sources":["/home/kerem/thesis-fe-react/src/components/MainContent/WebSites/WebSiteCards.js"],"names":["SortPanel","WebsiteCard","useEffect","useState","useLocation","sort","arr","by","i","length","indexOfMax","j","numberOfLikes","numberOfDislikes","maxValue","WebSiteCards","props","webSites","setWebSites","location","searchParams","URLSearchParams","search","sortByParam","get","websites","fetch","then","response","ok","Error","json","data","catch","err","alert","message","toLowerCase","concat","a","b","map","site","onSelectCard","id"],"mappings":"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","sourcesContent":["import SortPanel from \"./SortPanel\";\nimport WebsiteCard from \"./WebsiteCard\";\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction sort(arr, by) {\n  for (let i = 0; i < arr.length; i++) {\n    let indexOfMax = i;\n    for (let j = i + 1; j < arr.length; j++) {\n      if (by === \"likes\") {\n        if (arr[j].numberOfLikes > arr[indexOfMax].numberOfLikes) {\n          indexOfMax = j;\n        }\n      } else if (by === \"dislikes\") {\n        if (arr[j].numberOfDislikes > arr[indexOfMax].numberOfDislikes) {\n          indexOfMax = j;\n        }\n      }\n    }\n\n    const maxValue = arr[indexOfMax];\n    arr[indexOfMax] = arr[i];\n    arr[i] = maxValue;\n  }\n}\n\nfunction WebSiteCards(props) {\n  const [webSites, setWebSites] = useState();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const sortByParam = searchParams.get(\"sortBy\");\n\n  useEffect(() => {\n    if (!props.websites) {\n      fetch(\"http://localhost:8080/api/webpages\")\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Error: Failed To Fetch\");\n          }\n          return response.json();\n        })\n        .then((data) => {\n          setWebSites(data);\n        })\n        .catch((err) => alert(err.message));\n    } else {\n      setWebSites(props.websites);\n    }\n  }, [props.websites]);\n\n  if (webSites && sortByParam) {\n    if (sortByParam.toLowerCase() === \"liked\") {\n      sort(webSites, \"likes\");\n    } else if (sortByParam.toLowerCase() === \"disliked\") {\n      sort(webSites, \"dislikes\");\n    }\n  }\n\n  return (\n    <div className=\"col-7 mx-3\">\n      <SortPanel />\n      <hr className=\"gy-0 p-0\" />\n      {webSites &&\n        []\n          .concat(webSites)\n          .sort((a, b) => {\n            if (sortByParam === \"Likes\") {\n              return a.numberOfLikes > b.numberOfLikes ? -1 : 1;\n            } else {\n              return a.numberOfDislikes > b.numberOfDislikes ? -1 : 1;\n            }\n          })\n          .map((site) => (\n            <WebsiteCard\n              key={site.id}\n              onSelect={props.onSelectCard}\n              webSiteData={site}\n            />\n          ))}\n    </div>\n  );\n}\n\nexport default WebSiteCards;\n"]},"metadata":{},"sourceType":"module"}