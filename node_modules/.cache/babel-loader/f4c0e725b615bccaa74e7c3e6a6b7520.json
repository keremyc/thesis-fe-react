{"ast":null,"code":"var _jsxFileName = \"/home/kerem/thesis-fe-react/src/components/MainContent/WebSites/WebSiteComments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport WebSiteComment from \"./WebSiteComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WebSiteComments(props) {\n  _s();\n\n  const [recommendations, setRecommendations] = useState();\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/webpages/${props.for.id}/recs`).then(response => {\n      if (!response.ok) {\n        alert(\"Failed while retrieving recommendations\");\n      }\n\n      return response.json();\n    }).then(data => {\n      setRecommendations(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: recommendations.map(rec => /*#__PURE__*/_jsxDEV(WebSiteComment, {\n      commentData: rec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebSiteComments, \"VbHwxpDamwhs++sHezhEvBHRnEs=\");\n\n_c = WebSiteComments;\nexport default WebSiteComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSiteComments\");","map":{"version":3,"sources":["/home/kerem/thesis-fe-react/src/components/MainContent/WebSites/WebSiteComments.js"],"names":["React","useEffect","useState","WebSiteComment","WebSiteComments","props","recommendations","setRecommendations","fetch","for","id","then","response","ok","alert","json","data","map","rec"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAE,sCAAqCH,KAAK,CAACI,GAAN,CAAUC,EAAG,OAApD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChBC,QAAAA,KAAK,CAAC,yCAAD,CAAL;AACD;;AAED,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KAPD,EAOGJ,IAPH,CAOQK,IAAI,IAAI;AACdT,MAAAA,kBAAkB,CAACS,IAAD,CAAlB;AACD,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGV,eAAe,CAACW,GAAhB,CAAqBC,GAAD,iBACnB,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvBQd,e;;KAAAA,e;AAyBT,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport WebSiteComment from \"./WebSiteComment\";\n\nfunction WebSiteComments(props) {\n  const [recommendations, setRecommendations] = useState();\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/webpages/${props.for.id}/recs`)\n    .then(response => {\n      if (!response.ok) {\n        alert(\"Failed while retrieving recommendations\")\n      }\n\n      return response.json();\n    }).then(data => {\n      setRecommendations(data);\n    })\n  }, []);\n\n  return (\n    <React.Fragment>\n      {recommendations.map((rec) => (\n        <WebSiteComment commentData={rec} />\n      ))}\n    </React.Fragment>\n  );\n}\n\nexport default WebSiteComments;\n"]},"metadata":{},"sourceType":"module"}