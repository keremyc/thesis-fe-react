{"ast":null,"code":"var _jsxFileName = \"/home/kerem/thesis-fe-react/src/store/auth-context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default AuthContext = _s(() => {\n  _s();\n\n  return useContext({\n    token: \"\",\n    isAuthenticated: false,\n    login: () => {},\n    logout: () => {}\n  });\n}, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthContextProvider(props) {\n  _s2();\n\n  const [authState, setAuthState] = useState({\n    token: \"\",\n    isAuthenticated: false\n  });\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n\n    if (storedToken) {\n      setAuthState({\n        token: storedToken,\n        isAuthenticated: true\n      });\n    }\n  }, []);\n\n  function loginHandler(authToken) {\n    setAuthState({\n      token: token,\n      isAuthenticated: true\n    });\n    localStorage.setItem(\"token\", token);\n  }\n\n  function logoutHandler() {\n    setAuthState({\n      token: \"\",\n      isAuthenticated: false\n    });\n    localStorage.removeItem(\"token\");\n  }\n\n  const authContext = {\n    token: authState.token,\n    isAuthenticated: authState.isAuthenticated,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthContextProvider, \"weStVYqbaJkedcJMqwUJx1yIHo8=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/kerem/thesis-fe-react/src/store/auth-context/AuthContext.js"],"names":["useContext","useEffect","useState","AuthContext","token","isAuthenticated","login","logout","AuthContextProvider","props","authState","setAuthState","storedToken","localStorage","getItem","loginHandler","authToken","setItem","logoutHandler","removeItem","authContext","children"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;;AAEA,eAAeC,WAAW,MAAG;AAAA;;AAAA,SAAMH,UAAU,CAAC;AAC5CI,IAAAA,KAAK,EAAE,EADqC;AAE5CC,IAAAA,eAAe,EAAE,KAF2B;AAG5CC,IAAAA,KAAK,EAAE,MAAM,CAAE,CAH6B;AAI5CC,IAAAA,MAAM,EAAE,MAAM,CAAE;AAJ4B,GAAD,CAAhB;AAAA,CAAH,iCAA1B;AAOA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACzCE,IAAAA,KAAK,EAAE,EADkC;AAEzCC,IAAAA,eAAe,EAAE;AAFwB,GAAD,CAA1C;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;;AACA,QAAIF,WAAJ,EAAiB;AACfD,MAAAA,YAAY,CAAC;AAAEP,QAAAA,KAAK,EAAEQ,WAAT;AAAsBP,QAAAA,eAAe,EAAE;AAAvC,OAAD,CAAZ;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,WAASU,YAAT,CAAsBC,SAAtB,EAAiC;AAC/BL,IAAAA,YAAY,CAAC;AAAEP,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,eAAe,EAAE;AAAjC,KAAD,CAAZ;AACAQ,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8Bb,KAA9B;AACD;;AAED,WAASc,aAAT,GAAyB;AACvBP,IAAAA,YAAY,CAAC;AAAEP,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,eAAe,EAAE;AAA9B,KAAD,CAAZ;AACAQ,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACD;;AAED,QAAMC,WAAW,GAAG;AAClBhB,IAAAA,KAAK,EAAEM,SAAS,CAACN,KADC;AAElBC,IAAAA,eAAe,EAAEK,SAAS,CAACL,eAFT;AAGlBC,IAAAA,KAAK,EAAES,YAHW;AAIlBR,IAAAA,MAAM,EAAEW;AAJU,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGX,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAnCeb,mB;;KAAAA,mB","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\n\nexport default AuthContext = () => useContext({\n  token: \"\",\n  isAuthenticated: false,\n  login: () => {},\n  logout: () => {},\n});\n\nexport function AuthContextProvider(props) {\n  const [authState, setAuthState] = useState({\n    token: \"\",\n    isAuthenticated: false,\n  });\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setAuthState({ token: storedToken, isAuthenticated: true });\n    }\n  }, []);\n\n  function loginHandler(authToken) {\n    setAuthState({ token: token, isAuthenticated: true });\n    localStorage.setItem(\"token\", token);\n  }\n\n  function logoutHandler() {\n    setAuthState({ token: \"\", isAuthenticated: false });\n    localStorage.removeItem(\"token\");\n  }\n\n  const authContext = {\n    token: authState.token,\n    isAuthenticated: authState.isAuthenticated,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}